# ======================================================
# 1) Définition du logger racine : niveau INFO
#    et on envoie tout vers 2 appenders : console + file
# ======================================================
log4j.rootLogger=INFO, console, file


# ======================================================
# 2) ConsoleAppender : on met un threshold = WARN
#    => Seuls les logs >= WARN s'affichent en console
# ======================================================
log4j.appender.console=org.apache.log4j.ConsoleAppender
logrj.appender.console.Target=System.out
log4j.appender.console.Threshold=WARN
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%-5p %c{1} - %m%n


# ======================================================
# 3) FileAppender : on enregistre tout à partir de INFO
#    => Ces logs sont consultables par Hadoop UI (NameNode, etc.)
# ======================================================
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=/logs/main.log
log4j.appender.file.Append=true
log4j.appender.file.ImmediateFlush=true
log4j.appender.file.MaxFileSize=10MB
log4j.appender.file.MaxBackupIndex=5
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d %d{Z} [%t] %-5p (%F:%L) - %m%n

#Define loggers
log4j.logger.com.journaldev.log4j=WARN, file, console
log4j.logger.com.journaldev.log4j.logic=DEBUG, file, console

#setting additivity
log4j.additivity.com.journaldev.log4j=false
log4j.additivity.com.journaldev.log4j.logic=false


# ======================================================
# 4) (Optionnel) Config spécifique pour org.apache.hadoop
#    Si tu veux forcer Hadoop à un niveau donné (ex. INFO),
#    tu peux ajouter:
# ======================================================
# log4j.logger.org.apache.hadoop=INFO
